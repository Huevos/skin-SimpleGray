name: build

on:
  push:
    paths-ignore:
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'README.md'

jobs:
  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [2.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        if: matrix.python-version != '2.7'
        run: |
          python -m pip install --upgrade pip
      - name: Install dependencies
        run: |
          pip install flake8
      - name: Compile sources
        run: |
          python -O -m compileall ./usr/lib/enigma2/python/Components/
      - name: Check code with flake8
        run: |
          flake8 --ignore=W191,E128,E131,E117
  deploy:
    needs: test-python
    if: always() && !contains(github.event.head_commit.message,'skip-release') && github.event_name == 'push' && needs.test-python.result == 'success' && github.repository == 'Taapat/skin-SimpleGray' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          python-version: '2.7'
      - name: Compile sources
        run: |
          python -O -m compileall ./usr/lib/enigma2/python/Components/
      - name: Set git variables
        run: |
          echo "SRCPV=git$(git rev-list --count HEAD)" >> $GITHUB_ENV
          echo "SHA7=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "COMMIT_SUBJECT=$(git log -1 --pretty=format:%s)" >> $GITHUB_ENV
      - name: Create plugin package files
        run: |
          sed -i 's/Version:/Version: 1.0+${{ env.SRCPV }}+${{ env.SHA7 }}-r0.0/' deploy/control/control
          mkdir ipk
      - name: Build data package
        run: |
          tar --numeric-owner --group=0 --owner=0 -czf ./deploy/data.tar.gz ./usr/*
      - name: Build control package
        working-directory: './deploy/control'
        run: |
          tar --numeric-owner --group=0 --owner=0 -czf ../control.tar.gz ./*
      - name: Build ipk package
        working-directory: './deploy'
        run: |
          echo 2.0 > debian-binary
          ar rv ../ipk/enigma2-plugin-skins-simple-gray_1.0+${{ env.SRCPV }}+${{ env.SHA7 }}-r0.0_all.ipk debian-binary data.tar.gz control.tar.gz
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.SRCPV }}
          release_name: ${{ env.COMMIT_SUBJECT }}
          draft: false
          prerelease: false
      - name: Upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ipk/enigma2-plugin-skins-simple-gray_1.0+${{ env.SRCPV }}+${{ env.SHA7 }}-r0.0_all.ipk
          asset_name: enigma2-plugin-skins-simple-gray_1.0+${{ env.SRCPV }}+${{ env.SHA7 }}-r0.0_all.ipk
          asset_content_type: application/ipk
